% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/insertModelRaster.R
\name{insertModelRaster}
\alias{insertModelRaster}
\title{Add a model-output raster file to the database}
\usage{
insertModelRaster(
  con,
  raster,
  model,
  valid_from,
  valid_to,
  issued,
  units = NULL,
  source = NULL,
  bit.depth = NULL,
  blocks = NULL
)
}
\arguments{
\item{con}{A connection to the database, created with \code{\link[DBI:dbConnect]{DBI::dbConnect()}} or using the utility function \code{\link[=hydrometConnect]{hydrometConnect()}}.}

\item{raster}{The raster object to add to the database, as a \code{\link[terra:rast]{terra::rast()}} object, as a file path, or as a valid URL. Can be multi-band. Band names will be taken directly from this raster.}

\item{model}{The model which generated the raster.}

\item{valid_from}{Must be a .POSIXct object or character vector that can be coerced to one. Character vectors will be converted assuming a UTC offset of 0.}

\item{valid_to}{Must be a .POSIXct object or character vector that can be coerced to one. Character vectors will be converted assuming a UTC offset of 0.}

\item{issued}{The issued datetime of the raster. Must be a .POSIXct object or character vector that can be coerced to one. Character vectors will be converted assuming a UTC offset of 0.}

\item{units}{The units associated with each band, as a character vector. If left NULL function will attempt to retrieve units from the raster metadata. Otherwise if specified must be a vector of 1 or of length equal to the number of raster bands.}

\item{source}{The source from which this raster was retrieve (optional but recommended).}

\item{bit.depth}{The bit depth of the raster. 32-bit float is '32BF', 32-bit unsigned integer is '32BUI', 32-bit signed integer is '32BSI'. Default to NULL which will parse the data to determine which 32-bit flavor to choose. You \strong{must} specify if your data is greater than 32 bit.}

\item{blocks}{The number of blocks in which to break the raster apart. If NULL blocks will be automatically determined, as per \code{\link[rpostgis:pgWriteRast]{rpostgis::pgWriteRast()}}. Blocks (tiles) can be useful to speed up queries that only need a small subset of the raster, but lengthen write time.}
}
\value{
The reference_id of the newly appended raster.
}
\description{
Use this function to add a raster file output by a model (forecast or reanalysis) to the hydromet or snow database (if the later has the necessary tables craeted) Ensures that database constraints are met. If you need to replace or delete a raster for any reason you'll have to use SQL (perhaps via R using the DBI package) to delete it first. If the raster is not created by a model use function \code{\link[=addRaster]{addRaster()}} instead.

Depending on size, rasters might be broken up into many tiles. Because of this and the database's spatial capabilities, it's possible to only fetch the tiles you need using \code{\link[rpostgis:pgGetRast]{rpostgis::pgGetRast()}}. You'll have to specify which reference_id to use as a clause; find the right one in the 'rasters_reference' table. Look at the parameter \code{boundary} to specify a limited spatial extent, and at \code{bands} to only fetch certain bands. The rasters themselves live in the 'rasters' table, but the reference id in in the 'rasters_reference' table.
}
