% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_ts_templates.R
\name{add_ts_templates}
\alias{add_ts_templates}
\title{Templates to add timeseries to hydromet database}
\usage{
add_ts_templates(
  con = hydrometConnect(silent = TRUE),
  format = "short",
  save_path = NULL
)
}
\arguments{
\item{con}{A connection to the database, created with \code{\link[DBI:dbConnect]{DBI::dbConnect()}} or using the utility function \code{\link[=hydrometConnect]{hydrometConnect()}}.}

\item{format}{"long" or "short", only applies to the timeseries table. If long, will return one row per unique parameter with the total data.frame length equal to the parameter with the highest count. If short will return a single row, with unique parameter values concatenated in a single cell per parameter.}

\item{save_path}{Specify a save path (folder) if you want an xlsx document with column headers as required by function \code{\link[=add_timeseries]{add_timeseries()}}. "choose" lets you choose interactively.}
}
\value{
A list of three data.frames:
For the timeseries table, a data.frame with column names and options already in the DB for each required parameter to pass to the parameter \code{timeseries_df} of \code{\link[=add_timeseries]{add_timeseries()}}.
For the spatial table, a data.frame with column names and options already in the DB for each required parameter to pass to the parameter \code{locations_df} of \code{\link[=add_timeseries]{add_timeseries()}}.
A data.frame is also produced listing the datums present in the database, facilitating your specification of the appropriate datum in the spatial table.
}
\description{
Note: if there is no entry in the timeseries table column named source_fx_args, additional arguments to pass to the function specified in source_fx should take the form of c("period = 'PT1H'", "parameter2 = argument2"). Note the single straight quotes around the argument 'PT1H', necessary to clarify that the argument is a character vector.
}
