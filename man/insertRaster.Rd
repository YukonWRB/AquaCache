% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/insertRaster.R, R/writeRaster.R
\name{insertRaster}
\alias{insertRaster}
\title{Add a raster file to the database}
\usage{
insertRaster(
  con,
  raster,
  rast_table = "rasters",
  bit.depth = NULL,
  blocks = NULL,
  constraints = TRUE
)

insertRaster(
  con,
  raster,
  rast_table = "rasters",
  bit.depth = NULL,
  blocks = NULL,
  constraints = TRUE
)
}
\arguments{
\item{con}{A connection object to a PostgreSQL database.}

\item{raster}{A terra \code{SpatRaster}; objects from the raster
package.}

\item{rast_table}{A character string specifying a PostgreSQL schema in the
database (if necessary) and table name to hold the raster (e.g.,
\code{name = c("schema","table")}).}

\item{bit.depth}{The bit depth of the raster. Will be set to 32-bit
(unsigned int, signed int, or float, depending on the data)
if left null, but can be specified (as character) as one of the
PostGIS pixel types (see \url{http://postgis.net/docs/RT_ST_BandPixelType.html}).}

\item{blocks}{Optional desired number of blocks (tiles) to split the raster
into in the resulting PostGIS table. This should be specified as a
one or two-length (columns, rows) integer vector. See also 'Details'.}

\item{constraints}{Whether to create constraints from raster data. Recommended
to leave \code{TRUE} unless applying constraints manually (see
\url{http://postgis.net/docs/RT_AddRasterConstraints.html}).
Note that constraint notices may print to the console,
depending on the PostgreSQL server settings.}

\item{description}{A succinct description for the raster.}

\item{units}{The units associated with each band, as a character vector. If left NULL function will attempt to retrieve units from the raster metadata. Otherwise if specified must be a vector of 1 or of length equal to the number of raster bands.}

\item{source}{The source from which this raster was retrieved (optional but recommended).}
}
\value{
The reference_id of the newly appended raster.

A list with TRUE for successful import and the rid(s) of the appended entries.
}
\description{
Use this function to add a raster file to the database that wasn't created by a model (use \code{\link[=addModelRaster]{addModelRaster()}} for that). Ensures that database constraints are met. If you need to replace or delete a raster for any reason you'll have to use SQL (perhaps via R using the DBI package) to delete it first, remembering to delete the matching entries in the rasters and rasters_model_output tables.

Depending on size, rasters might be broken up into many tiles. Because of this and the database's spatial capabilities, it's possible to only fetch the tiles you need using \code{\link[rpostgis:pgGetRast]{rpostgis::pgGetRast()}}. You'll have to specify which reference_id to use as a clause; find the right one in the 'rasters_reference' table. Look at the parameter \code{boundary} to specify a limited spatial extent, and at \code{bands} to only fetch certain bands. The rasters themselves live in the 'rasters' table, but the reference id in in the 'rasters_reference' table.

This function is not meant to be used by itself: in most cases use \code{\link[=addModelRaster]{addModelRaster()}} or \code{\link[=addRaster]{addRaster()}} which will populate reference tables so that your raster can be easily found later.

Sends R raster to a PostGIS database table, allowing it to be fetched later into an R environment. This function is an adaptation of \code{\link[rpostgis:pgWriteRast]{rpostgis::pgWriteRast()}}. Will create the raster table if necessary.
}
\details{
SpatRaster band names will be stored in an array in the column
"band_names", which will be restored in R when imported with the function
\code{\link[rpostgis]{pgGetRast}}.

If \code{blocks = NULL}, the number of block will vary by raster size, with
a default value of 100 copies of the data in the memory at any point in time.
If a specified number of blocks is desired, set blocks to a one or two-length
integer vector. Note that fewer, larger blocks generally results in faster
write times.
}
\keyword{internal}
