% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getSnowCourse.R
\name{getSnowCourse}
\alias{getSnowCourse}
\title{Bring snow course data into the hydromet database}
\usage{
getSnowCourse(
  location,
  param_code,
  start_datetime,
  end_datetime = Sys.time(),
  old_loc = NULL,
  snowCon = snowConnect()
)
}
\arguments{
\item{location}{The location code associated with the snow course.}

\item{param_code}{For snow courses, one of "SWE" or "depth" corresponding to the desired parameter.}

\item{start_datetime}{Specify as class Date, POSIXct OR as character string which can be interpreted as POSIXct. If character, UTC offset of 0 will be assigned, otherwise conversion to UTC 0 will be performed on POSIXct class input. If date, time will default to 00:00 to capture whole day.}

\item{end_datetime}{Specify as class Date, POSIXct OR as character string which can be interpreted as POSIXct. If character, UTC offset of 0 will be assigned, otherwise conversion to UTC 0 will be performed on POSIXct class input. If Date, time will default to 23:59:59 to capture whole day.}

\item{old_loc}{In some cases the measurement location has moved slightly over the years, but not enough for the new location to be distinct from the old location. In this case you can specify the old location name which will be searched for in the snowDB. If found, the timeseries from the old location will be treated as if they are the new location. An offset will be calculated whenever possible putting the old location in-line with the new location. New location data takes precedence when both were measured.}

\item{snowCon}{A connection to the snow database.}
}
\value{
A data.frame object with the requested data. If there are no new data points the data.frame will have 0 rows.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}

Brings in pared-down snow course data to the database. Can automatically calculate an offset value where locations have operated in parallel in anticipation of replacing the old location with a nearby new one, updating the calculation with each new data point (see parameter old_loc).
}
