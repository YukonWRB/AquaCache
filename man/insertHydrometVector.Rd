% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/insertHydrometVector.R
\name{insertHydrometVector}
\alias{insertHydrometVector}
\title{Add a vector file to the database}
\usage{
insertHydrometVector(
  geom,
  layer_name,
  feature_name = NULL,
  description = NULL,
  feature_name_col = NULL,
  description_col = NULL,
  table = "vectors",
  geom_col = "geom",
  overwrite = FALSE,
  con = hydrometConnect(silent = TRUE)
)
}
\arguments{
\item{geom}{The geometry object to add to the database, as a \code{\link[terra:vect]{terra::vect()}} object or as a file path to a shapefile, geopackage or something else that terra::vect() van use. Conversion will automatically be made to epsg:4269, NAD83 lat/long decimal degrees. Can be points, lines, or polygons with one or more features. Multi-feature geoms will be split up into individual database entries.}

\item{layer_name}{The name to give to the vector layer, which defines which layer_name it gets assigned to in the database. This should always be an existing layer_name unless you have a good reason to create a new one.}

\item{feature_name}{A short but descriptive name to give to the geom feature. Leave NULL if specified with parameter \code{feature_name_col} instead. This parameter only works for geoms with a single feature (row).}

\item{description}{Optional but highly recommended long-form description of the geometry feature. Leave NULL is specifying a \code{description_col} instead.}

\item{feature_name_col}{The name of the column with names to give to the geom features. Each feature (row in the attribute table) will be entered to the database using the string in this column. Leave NULL if specified with parameter \code{feature_name}.}

\item{description_col}{The name of the column containing descriptions associated with each feature. Each feature (row in the attribute table) will be entered to the database using the string in this column. Leave NULL if specified with parameter \code{description} instead.}

\item{table}{The target table in the database (as character string). If not under the public schema, use format c("schema", "table").}

\item{geom_col}{The name of the database table column in which to insert the geometry object.}

\item{overwrite}{If a row already exists for the combination of layer_name, name,  and geometry type (point, line, or polygon), should it be overwritten?}

\item{con}{A connection to the database, created with \code{\link[DBI:dbConnect]{DBI::dbConnect()}} or using the utility function \code{\link[=hydrometConnect]{hydrometConnect()}}.}
}
\value{
A boolean vector, one element per feature.Messages will also be printed to the console.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}

Use this function to add a vector file to the database. Ensures that database constraints are met and permits spatial queries. If you need to delete (not overwrite) a vector for any reason you'll have to use SQL (perhaps via R using the DBI package).
\subsection{Extracting from the database}{

Use function \code{\link[YGwater:getVector]{YGwater::getVector()}} to retrieve a point, line, or polygon from the database.
}

\subsection{Attribute tables:}{

The attribute table of the object will be discarded except for the columns specified in parameters \code{feature_name_col} and \code{description_col} to work with the existing database column names and to enable many to many relationships within the database. If you want vector files with attribute tables please use another method, such as saving a .gpkg of the vector file and uploading it to the 'documents' table using \code{\link[=insertHydrometDocument]{insertHydrometDocument()}}. Note however that this precludes using the object's spatial attributes within the database!
}
}
