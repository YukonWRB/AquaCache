% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_timeseries.R
\name{add_timeseries}
\alias{add_timeseries}
\title{Add timeseries to database}
\usage{
add_timeseries(path, location, parameter, units, type, network)
}
\arguments{
\item{path}{The path to the local database, with extension.}

\item{location}{The location identifier, exactly as per the WSC or as written in Aquarius. Case sensitive. Specify as a character vector of length 1 or more.}

\item{parameter}{The parameter for this location, matched 1:1 to the other vectors. If at all possible match existing parameters, such as "level", "flow", "SWE", "snow depth", or "distance", or "temperature".}

\item{units}{The measurement units for this new location, matched 1:1 to the other vectors. If at all possible try to match an existing unit such as "m" for level or distance, "m3/s" for flow volumes, "mm" for mm SWE or precipitation, "cm" for snow depth.}

\item{type}{Continuous or discrete, matched to the other vectors 1:1.}

\item{network}{The name of the network. Again, try to match existing network names.}
}
\value{
One or more new entries are created in the table 'locations.'
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}

This function facilitates the addition of one or multiple timeseries to the database by adding entries to the timeseries table. The locations table and matching measurement tables will be populated during the next run of \code{\link[=hydro_update_daily]{hydro_update_daily()}}. If specifying level or flow, incorporation will first be attempted for a WSC location. Failure triggers an attempt to add a station from Aquarius.

If \code{\link[=hydro_update_daily]{hydro_update_daily()}} fails to find a corresponding timeseries anywhere, the offending timeseries will be marked as "FAILED" in the timeseries table in the "type" column. Reset the "type" field to try again.
}
\seealso{
\code{\link[WRBtools:DB_browse_ts]{WRBtools::DB_browse_ts()}} to see what's in the timeseries table already and match parameters, units, types, networks.
}
