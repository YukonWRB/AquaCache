% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dbGetQueryDT.R
\name{dbGetQueryDT}
\alias{dbGetQueryDT}
\title{Retrieve a data.table from a database connection}
\usage{
dbGetQueryDT(con, statement, ...)
}
\arguments{
\item{con}{A connection object as returned by a \code{\link[DBI:dbConnect]{DBI::dbConnect()}} call or, in the context of this package, a \code{\link[=AquaConnect]{AquaConnect()}} or \code{\link[=snowConnect]{snowConnect()}} call.}

\item{statement}{A SQL statement to be passed to the database.}

\item{...}{Other parameters passed to the ... parameter of \code{\link[DBI:dbGetQuery]{DBI::dbGetQuery()}}.}
}
\value{
A data.table object.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}

A simple wrapper function around \code{\link[DBI:dbGetQuery]{DBI::dbGetQuery()}} that returns a data.table object instead of a data.frame. Can be used as a direct replacement for \code{\link[DBI:dbGetQuery]{DBI::dbGetQuery()}}, but be aware of the downstream effects of using a data.table object instead of a data.frame.
}
