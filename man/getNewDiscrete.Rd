% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getNewDiscrete.R
\name{getNewDiscrete}
\alias{getNewDiscrete}
\title{Get new discrete-category data}
\usage{
getNewDiscrete(
  con = NULL,
  location_id = NULL,
  sub_location_id = NULL,
  sample_series_id = NULL,
  active = "default",
  snowCon = NULL,
  EQCon = NULL
)
}
\arguments{
\item{con}{A connection to the database, created with \code{\link[DBI:dbConnect]{DBI::dbConnect()}} or using the utility function \code{\link[=AquaConnect]{AquaConnect()}}. NULL will create a connection and close it afterwards, otherwise it's up to you to close it after.}

\item{location_id}{The location_ids you wish to have updated, as character or numeric vector. Defaults to NULL which will fetch data from all location_ids in the 'sample_series' table for all corresponding time ranges using the associated source functions (if more than one per location).}

\item{sub_location_id}{The sub_location_ids you wish to have updated, as character or numeric vector. Defaults to NULL which will fetch data from all sub_location_ids in the 'sample_series' table for all corresponding time ranges using the associated source functions (if more than one per location).}

\item{sample_series_id}{The sample_series_ids you wish to have updated, as character or numeric vector. Defaults to NULL, giving precedence to 'location_id'. This can be useful when wanting to synch all time ranges for a location that may have different sample_series_ids.}

\item{active}{Sets behavior for import of new data. If set to 'default', the function will look to the column 'active' in the 'sample_series' table to determine if new data should be fetched. If set to 'all', the function will ignore the 'active' column and import all data.}

\item{snowCon}{A connection to the snow course database, created with \code{\link[=snowConnect]{snowConnect()}}. NULL will create a connection using the same connection host and port as the 'con' connection object and close it afterwards. Not used if no data is pulled from the snow database.}

\item{EQCon}{A connection to the EQWin database, created with \code{\link[=EQConnect]{EQConnect()}}. NULL will create a connection and close it afterwards. Not used if no data is pulled from the EQWin database.}
}
\value{
The database is updated in-place, and a data.frame is generated with one row per updated location.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}

Retrieves new discrete data starting from the last data point in the local database, using the function specified in the sample_series table column "source_fx". Each sample series can also have a specified time range, allowing a certain location/sub-location to have multiple sample_series with different source functions and time ranges. The function will update the database in-place with the new data.
\subsection{Making functions called by getNewDiscrete:}{

Each sample_series_id in the database has a source_fx column that specifies the function to be called to get new data and, optionally, function arguments specified in source_fx_args. Source functions must return list of lists, with each list element containing two data.frames: one for sample metadata and one for associated results. The sample metadata data.frame must contain the following columns:
\itemize{
\item 'location_id': a numeric specifying the location_id of the data point from table 'locations'.
\item 'media_id': a numeric specifying the media_id of the data point from table 'medias'.
\item 'datetime': a POSIXct datetime object in UTC 0 time zone, specifying the datetime of the data point.
\item 'collection_method': a numeric specifying the collection_method_id of the data point from table 'collection_methods', such as 1 (observation), 27 (water bottle), or 14 (pump).
\item 'sample_type': a numeric specifying the sample_type_id of the data point from table 'sample_types', such as 1 (grab), 2 (composite), or 3 (integrated).
\item 'owner': the owner of the data, as a character string. This should match entries in the 'organizations' table and an error will be thrown if it does not.
\item 'import_source_id': a numeric specifying the import_source_id of the data point from table 'import_sources' (use for tracking purposes).
Optional columns are:
\item 'target_datetime': a POSIXct datetime object in UTC 0 time zone, specifying an artificial datetime for the data point which can be used for data analysis or plotting purposes.
\item 'note': a character string with a note about the data point(s).
\item 'contributor' the name of the person or organization that contributed the data, as a character string. This should match entries in the 'organizations' table and an error will be thrown if it does not.
\item 'approval': the approval status of the data, as a character string. This should match entries in the 'approvals' table and an error will be thrown if it does not.
\item 'grade': the grade of the data, as a character string. This should match entries in the 'grades' table and an error will be thrown if it does not.
\item 'qualifier': the qualifier of the data, as a character string. This should match entries in the 'qualifiers' table and an error will be thrown if it does not.
}

The results data.frame must contain the following columns:
\itemize{
\item 'parameter_id': a numeric specifying the parameter_id of the data point from table 'parameters'.
\item 'result': a numeric specifying the sample's results, matched to the parameters
\item 'result_condition': a numeric specifying the result condition of the data point from table 'result_conditions', such as "< DL" or "> DL". Only necessary if there are NA values in the 'result' column that should be interpreted as a specific condition. If not provided, rows with NA values will be dropped.
\item 'result_condition_value': a numeric specifying the value of the result condition, such as 0.1 for "< DL 0.1". Necessary if column 'result_condition' is provided AND contains values of 1 or 2, i.e. 'Below Detection/Quantification Limit' or 'Above Detection/Quantification Limit'.
\item 'sample_fraction': a numeric specifying the sample_fraction_id of the data point from table 'sample_fractions', such as 19 ('total'), 5 ('dissolved'), or 18 ('suspended'). Required if the column 'sample_fraction' in table 'parameters' is TRUE for the parameter in question.
\item 'result_speciation': a numeric specifying the result_speciation_id of the data point from table 'result_speciations', such as 3 (as CaCO3), 5 (as CN), or 44 (of S). Required if the column 'result_speciation' in table 'parameters' is TRUE for the parameter in question.
}

Additionally, functions must be able to handle the case where no new data is available and return an empty list.
}
}
